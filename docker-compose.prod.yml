version: "3.8"

services:
  gadm-db:
    image: ghcr.io/christopherzinger/gadmdb:latest
    container_name: ${DB_HOST}
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      GADM_DB_NAME: ${GADM_DB_NAME}
      POSTGRES_SUPERUSER_PASSWORD: ${POSTGRES_SUPERUSER_PASSWORD}
      ADMIN_GROUP: ${ADMIN_GROUP}
      ADMIN_USER: ${ADMIN_USER}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      APP_GROUP: ${APP_GROUP}
      APP_USER: ${APP_USER}
      APP_PASSWORD: ${APP_PASSWORD}
    # volumes:
    #   - gadm_db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - gadm-network

  gadm-migrations:
    image: ghcr.io/christopherzinger/gadmmigrationservice:latest
    container_name: gadm-migrations
    environment:
      DATABASE_URL: ${DATABASE_URL_ADMIN}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      GADM_DB_NAME: ${GADM_DB_NAME}
      POSTGRES_SUPERUSER_PASSWORD: ${POSTGRES_SUPERUSER_PASSWORD}
      ADMIN_GROUP: ${ADMIN_GROUP}
      ADMIN_USER: ${ADMIN_USER}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      APP_GROUP: ${APP_GROUP}
      APP_USER: ${APP_USER}
      APP_PASSWORD: ${APP_PASSWORD}
    networks:
      - gadm-network
    platform: linux/x86_64
    depends_on:
      - ${DB_HOST}
    restart: "no" # Run once and exit
    command: ["up"]

  gadm-api:
    image: ghcr.io/christopherzinger/gadmapi:latest
    container_name: gadm-api
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      DATABASE_URL: ${DATABASE_URL}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      GADM_DB_NAME: ${GADM_DB_NAME}
      POSTGRES_SUPERUSER_PASSWORD: ${POSTGRES_SUPERUSER_PASSWORD}
      ADMIN_GROUP: ${ADMIN_GROUP}
      ADMIN_USER: ${ADMIN_USER}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      APP_GROUP: ${APP_GROUP}
      APP_USER: ${APP_USER}
      APP_PASSWORD: ${APP_PASSWORD}
    depends_on:
      - gadm-db
    networks:
      - gadm-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

# volumes:
#   gadm_db_data:
#     driver: local

networks:
  gadm-network:
    driver: bridge
