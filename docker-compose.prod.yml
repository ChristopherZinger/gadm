# Example: Using dedicated migration service
services:
  gadm-db:
    build:
      context: ./gadm-db
      dockerfile: Dockerfile
    image: ghcr.io/christopherzinger/gadmdb:latest
    platform: linux/amd64
    container_name: ${DB_HOST}
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      GADM_DB_NAME: ${GADM_DB_NAME}
      POSTGRES_SUPERUSER_PASSWORD: ${POSTGRES_SUPERUSER_PASSWORD}
      ADMIN_GROUP: ${ADMIN_GROUP}
      ADMIN_USER: ${ADMIN_USER}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      APP_GROUP: ${APP_GROUP}
      APP_USER: ${APP_USER}
      APP_PASSWORD: ${APP_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - gadm_db_data:/var/lib/postgresql/data
    restart: unless-stopped

  gadm-migrations:
    build:
      context: ./gadm-migrations
      dockerfile: Dockerfile
    image: ghcr.io/christopherzinger/gadmmigrationservice:latest
    platform: linux/amd64
    container_name: gadm-migrations
    environment:
      DATABASE_URL: ${DATABASE_URL_ADMIN}
    depends_on:
      - ${DB_HOST}
    restart: "no" # Run once and exit
    command: ["up"]

  gadm-api:
    build:
      context: ./gadm-api
      dockerfile: Dockerfile
    image: ghcr.io/christopherzinger/gadmapi:latest
    platform: linux/amd64
    container_name: gadm-api
    environment:
      DATABASE_URL: ${DATABASE_URL}
    ports:
      - "8080:8080"
    depends_on:
      - ${DB_HOST}
    restart: unless-stopped

volumes:
  gadm_db_data:
